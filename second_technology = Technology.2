"".empty?
s = "foobar"
"The string is empty" \
else\
s = "foobar" \
if s.empty? \
else \
"The string is nonempty" \
nil.empty?
nil.to_s.empty?
"foo".nl?
"foo".nil?
"".nil?
nil.nil?
title
@title
string = "foobar"
puts "The string '#{string}' is nonempty." unless string.empty?
if nil
true
false
"It's an empty string!"
else
puts string_message("foobar")
return "It's an empty string!" if string.empty?
puts string_message("test"_
puts string_message("test")
puts string_message("")
"It's an empty string"
string_message(""_
string_message("")
def string_message(string)
if string.empty?
return "It's an empty string"
"The string is nonempty."
string_message("test")
string_message(nil)
string_message(
"")
"foo  bar        baz".split
"fooxbarxbazx".split("x")
a = [42,8,17]
a[-1]
a.third
a.sort
puts a.shuffle
a << 10
a << 5 << 22
a.push(3)
a.join
a
a.join(', ')
0..9
0..9.to_a
(0..9).to_a
a = %w[foo bar baz quux]
a[0..3]
a[0..1]
b = %w[3 foo bar]
('a'..'g').to_a
(1..5).each do |i|
puts 2*i
puts '--'
(1..5).map {|i| i**2 }
('a'..'z').to_a.shuffle[0..7].join
user = {}
user[
}
user["first_name"] = "Chris"
user["last_name"] = "Laumans"
user
user.sort
user.shuffle
user.last
user.first
user { :name => "Chris Laumans", :email => "chris@laumans.com" }
user = { :name => "Michael Hartl", :email => "michael@example.com" }
user= { :name => "Chris Laumans", :email => "chris@laumans.com" }
user[:name]
flash = {:name => "test name", :blue => "blue hash", :error => "error test"}
flash.each do |key, value|
puts "Key #{key.inspect} has value #{value.inspect}"
    a = Array.new([1, 3, 2])
a[0]
a = Array.new(1,3,2)
    h = hash.new
h = Hash.new
class.superclass
"test".class
"test".class.superclass
"test".class.superclass.superclass
"test".class.superclass.superclass.superclass
class Word
def palindrome?(string)
string == string.reverse
end
w = Word.new
w.palindrome?("test")
w.palindrome?("level")
exit
